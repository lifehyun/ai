#(10) 50개 주의 수입(Income) 정보만 출력하시오.
st[,'Income']
#(10) 50개 주의 수입(Income) 정보만 출력하시오.
st['Income',]
,
#(10) 50개 주의 수입(Income) 정보만 출력하시오.
st[,'Income']
# (11) Texas 주의 면적(Area)을 출력하시오. 시오.
area['Texas']
# (11) Texas 주의 면적(Area)을 출력하시오. 시오.
area('Texas')
# (11) Texas 주의 면적(Area)을 출력하시오.
st[,'Texas']
# (11) Texas 주의 면적(Area)을 출력하시오.
st['Texas']
# (11) Texas 주의 면적(Area)을 출력하시오.
st
# (11) Texas 주의 면적(Area)을 출력하시오.
st['Texas']
# (11) Texas 주의 면적(Area)을 출력하시오.
st['Texas','Area']
# (12) Ohio 주의 인구(Population)와 수입(Income)을 출력하시오.
st['Ohio','Populatiom','Income']
# (12) Ohio 주의 인구(Population)와 수입(Income)을 출력하시오.
st['Ohio','Populatiom'|'Income']
# (12) Ohio 주의 인구(Population)와 수입(Income)을 출력하시오.
st['Ohio'c('Populatiom''Income')]
# (12) Ohio 주의 인구(Population)와 수입(Income)을 출력하시오.
st['Ohio'('Populatiom','Income'),]
# (12) Ohio 주의 인구(Population)와 수입(Income)을 출력하시오.
st['Ohio'('Populatiom','Income')]
# (12) Ohio 주의 인구(Population)와 수입(Income)을 출력하시오.
st['Ohio',('Populatiom','Income')]
# (12) Ohio 주의 인구(Population)와 수입(Income)을 출력하시오.
st['Ohio']['Populatiom','Income']
# (12) Ohio 주의 인구(Population)와 수입(Income)을 출력하시오.
st['Ohio']c('Populatiom','Income')
# (12) Ohio 주의 인구(Population)와 수입(Income)을 출력하시오.
st['Ohio']
# (12) Ohio 주의 인구(Population)와 수입(Income)을 출력하시오.
st[,'Ohio']
# (13) 인구가 5,000 이상인 주의 데이터만 출력하시오.
rm(st)
#2번문제
#(1) state.x77을 변환하여 st에 데이터프레임으로 저장하시오.
st <- data.frame(state.x77)
#(2) st의 내용을 출력하시오.
st
#(3) st의 열 이름을 출력하시오.
colnames(st)
#(4) st의 행 이름을 출력하시오.
rownames(st)
#(5) st의 행의 개수와 열의 개수를 출력하시오.
nrow(st)
#(6) st의 요약 정보를 출력하시오.
str(st) #데이터 요약정보
dim(st) #행열갯수
#(7) st의 행별 합계와 평균을 출력하시오.
rowSums(st) #행별 합계
rowMeans(st)#행별 평균
colMeans(st)
#(8) st의 열별 합계와 평균을 출력하시오.
colSums(st)
#(9) Florida 주의 모든 정보를 출력하시오.
st['Florida',]
#(10) 50개 주의 수입(Income) 정보만 출력하시오.
st[,'Income']
# (11) Texas 주의 면적(Area)을 출력하시오.
st['Texas','Area']
# (12) Ohio 주의 인구(Population)와 수입(Income)을 출력하시오.
st['Ohio',]
# (12) Ohio 주의 인구(Population)와 수입(Income)을 출력하시오.
st['Ohio'['Population','Incom']]
# (12) Ohio 주의 인구(Population)와 수입(Income)을 출력하시오.
st['Ohio'c('Population','Incom')]
# (13) 인구가 5,000 이상인 주의 데이터만 출력하시오.
st
# (13) 인구가 5,000 이상인 주의 데이터만 출력하시오.
st[income[>5000]]
# (13) 인구가 5,000 이상인 주의 데이터만 출력하시오.
st[income>5000]]
# (13) 인구가 5,000 이상인 주의 데이터만 출력하시오.
st[income>5000]
# (13) 인구가 5,000 이상인 주의 데이터만 출력하시오.
st[income]
# (13) 인구가 5,000 이상인 주의 데이터만 출력하시오.
st[income,]
# (13) 인구가 5,000 이상인 주의 데이터만 출력하시오.
st[Income,]
# (13) 인구가 5,000 이상인 주의 데이터만 출력하시오.
st['Income',]
# (13) 인구가 5,000 이상인 주의 데이터만 출력하시오.
st[,'Income']
# (13) 인구가 5,000 이상인 주의 데이터만 출력하시오.
st['Income'>5000]
# (13) 인구가 5,000 이상인 주의 데이터만 출력하시오.
st['Income'<5000]
# (13) 인구가 5,000 이상인 주의 데이터만 출력하시오.
st['Population'<5000]
# (13) 인구가 5,000 이상인 주의 데이터만 출력하시오.
st['Population'>5000]
# (13) 인구가 5,000 이상인 주의 데이터만 출력하시오.
st[c('Population'>5000)]
# (13) 인구가 5,000 이상인 주의 데이터만 출력하시오.
st[c('Population'>5000)]
# (13) 인구가 5,000 이상인 주의 데이터만 출력하시오.
st[c('Population'<5000)]
# (13) 인구가 5,000 이상인 주의 데이터만 출력하시오.
st[c('Population',5000)]
# (14) 수입이 4,500 이상인 주의 인구, 수입, 면적을 출력하시오.
st[>]
# (14) 수입이 4,500 이상인 주의 인구, 수입, 면적을 출력하시오.
st['incom'>4500]
# (15) 수입이 4,500 이상인 주는 몇 개인지 출력하시오.
st c('Icncome')
# (15) 수입이 4,500 이상인 주는 몇 개인지 출력하시오.
st <-  c('Icncome')
#2번문제
#(1) state.x77을 변환하여 st에 데이터프레임으로 저장하시오.
st <- data.frame(state.x77)
#(2) st의 내용을 출력하시오.
st
#(3) st의 열 이름을 출력하시오.
colnames(st)
#(4) st의 행 이름을 출력하시오.
rownames(st)
#(5) st의 행의 개수와 열의 개수를 출력하시오.
nrow(st)
#(6) st의 요약 정보를 출력하시오.
str(st) #데이터 요약정보
dim(st) #행열갯수
#(7) st의 행별 합계와 평균을 출력하시오.
rowSums(st) #행별 합계
rowMeans(st)#행별 평균
#(8) st의 열별 합계와 평균을 출력하시오.
colSums(st)
colMeans(st)
#(9) Florida 주의 모든 정보를 출력하시오.
st['Florida',]
#(10) 50개 주의 수입(Income) 정보만 출력하시오.
st[,'Income']
# (11) Texas 주의 면적(Area)을 출력하시오.
st['Texas','Area']
# (11) Texas 주의 면적(Area)을 출력하시오.
st['Texas','Area']
# (12) Ohio 주의 인구(Population)와 수입(Income)을 출력하시오.
st['Ohio','Population','Incom']
# (12) Ohio 주의 인구(Population)와 수입(Income)을 출력하시오.
st['Ohio']c('Population','Incom')
# (12) Ohio 주의 인구(Population)와 수입(Income)을 출력하시오.
st['Ohio',]('Population','Incom')
# (12) Ohio 주의 인구(Population)와 수입(Income)을 출력하시오.
st[,'Ohio']('Population','Incom')
# (12) Ohio 주의 인구(Population)와 수입(Income)을 출력하시오.
st['Ohio']c('Population','Incom')
# (15) 수입이 4,500 이상인 주는 몇 개인지 출력하시오.
st['incom'>=4500]
#행과 열을 바꾸기
t(city.info)
# (13) 인구가 5,000 이상인 주의 데이터만 출력하시오.
subset(st,Population>=5000)
# (14) 수입이 4,500 이상인 주의 인구, 수입, 면적을 출력하시오.
subset(st,Income>=4500)
# (12) Ohio 주의 인구(Population)와 수입(Income)을 출력하시오.
st[Ohio]
# (12) Ohio 주의 인구(Population)와 수입(Income)을 출력하시오.
st['Ohio']
# (12) Ohio 주의 인구(Population)와 수입(Income)을 출력하시오.
st['Ohio',]
# (12) Ohio 주의 인구(Population)와 수입(Income)을 출력하시오.
st['Ohio','Population']
# (12) Ohio 주의 인구(Population)와 수입(Income)을 출력하시오.
st['Ohio','Population','Income']
# (12) Ohio 주의 인구(Population)와 수입(Income)을 출력하시오.
st['Ohio','Population''Income']
# (12) Ohio 주의 인구(Population)와 수입(Income)을 출력하시오.
st['Ohio','Population'&'Income']
# (12) Ohio 주의 인구(Population)와 수입(Income)을 출력하시오.
st['Ohio','Income']
# (12) Ohio 주의 인구(Population)와 수입(Income)을 출력하시오.
st['Ohio','Income','Population']
# (12) Ohio 주의 인구(Population)와 수입(Income)을 출력하시오.
st['Ohio','Income':'Population']
# (12) Ohio 주의 인구(Population)와 수입(Income)을 출력하시오.
st['Ohio'['Income']['Population']]
# (12) Ohio 주의 인구(Population)와 수입(Income)을 출력하시오.
st['Ohio'c('Income','Population')]
# (12) Ohio 주의 인구(Population)와 수입(Income)을 출력하시오.
st['Ohio',] c('Income','Population')
# (12) Ohio 주의 인구(Population)와 수입(Income)을 출력하시오.
st['Ohio', c('Population','Income')]
# (14) 수입이 4,500 이상인 주의 인구, 수입, 면적을 출력하시오.
subset(st,Income>=4500)
# (14) 수입이 4,500 이상인 주의 인구, 수입, 면적을 출력하시오.
subset(st,Income>=4500,c('Population','income'))
# (14) 수입이 4,500 이상인 주의 인구, 수입, 면적을 출력하시오.
subset(st,Income>=4500,).c('Population','income','Area')
# (14) 수입이 4,500 이상인 주의 인구, 수입, 면적을 출력하시오.
subset(st,Income>=4500,)c('Population','income','Area')
# (14) 수입이 4,500 이상인 주의 인구, 수입, 면적을 출력하시오.
subset(st,Income>=4500,c('Population','income','Area'))
# (14) 수입이 4,500 이상인 주의 인구, 수입, 면적을 출력하시오.
subset(st,Income>=4500 c('Population','income','Area'))
# (14) 수입이 4,500 이상인 주의 인구, 수입, 면적을 출력하시오.
subset(st,Income>=4500)
# (14) 수입이 4,500 이상인 주의 인구, 수입, 면적을 출력하시오.
subset(st,Income>=4500 , c('Population','income','Area'))
# (14) 수입이 4,500 이상인 주의 인구, 수입, 면적을 출력하시오.
subset(st,Income>=4500)
# (15) 수입이 4,500 이상인 주는 몇 개인지 출력하시오.
st['incom'>=4500, c('Population','income','Area')]
# (15) 수입이 4,500 이상인 주는 몇 개인지 출력하시오.
st['incom'>=4500,]c('Population','income','Area')
# (14) 수입이 4,500 이상인 주의 인구, 수입, 면적을 출력하시오.
subset(st,Income>=4500,)
# (14) 수입이 4,500 이상인 주의 인구, 수입, 면적을 출력하시오.
subset(st,Income>=4500,) 'Income'
# (14) 수입이 4,500 이상인 주의 인구, 수입, 면적을 출력하시오.
subset(st,Income>=4500,st,'Population')
# (14) 수입이 4,500 이상인 주의 인구, 수입, 면적을 출력하시오.
subset(st,Income>=4500,st'Population')
# (14) 수입이 4,500 이상인 주의 인구, 수입, 면적을 출력하시오.
subset(st,Income>=4500,select = 'Population','Income','Area')
# (14) 수입이 4,500 이상인 주의 인구, 수입, 면적을 출력하시오.
subset(st,Income>=4500, select = Population,Income,Area)
# (14) 수입이 4,500 이상인 주의 인구, 수입, 면적을 출력하시오.
subset(st,Income>=4500, select = c(Population,Income,Area))
# (15) 수입이 4,500 이상인 주는 몇 개인지 출력하시오.
st['incom'>=4500,]
# (15) 수입이 4,500 이상인 주는 몇 개인지 출력하시오.
rownames(st,'incom'>=4500,)
subset(st,Income>=4500)[,c(Population,Income,Area)]
subset(st,Income>=4500)[,c(Population,Income,Area)]
subset(st,Income>=4500)[,c('Population','Income','Area')]
# (14) 수입이 4,500 이상인 주의 인구, 수입, 면적을 출력하시오.
subset(st,Income>=4500, select = c(Population,Income,Area))
# (15) 수입이 4,500 이상인 주는 몇 개인지 출력하시오.
nrow(subset(st,'incom'>=4500,))
# (15) 수입이 4,500 이상인 주는 몇 개인지 출력하시오.
nrow(subset(st,incom>=4500))
# (15) 수입이 4,500 이상인 주는 몇 개인지 출력하시오.
nrow(subset(st,incom>=4500))
# (15) 수입이 4,500 이상인 주는 몇 개인지 출력하시오.
nrow(subset(st,incom>=4500))
# (15) 수입이 4,500 이상인 주는 몇 개인지 출력하시오.
nrow(subset(st,Incom>=4500))
# (15) 수입이 4,500 이상인 주는 몇 개인지 출력하시오.
nrow(subset(st,'Incom'>=4500))
# (16) 전체 면적(Area)이 100,000 이상이고, 결빙일수(Frost)가 120 이상인 주의 정보를 출력하시오.
subset(st,'Area'>=100000 & 'Frost'>=120)
# (17) 인구(Population)가 2,000 미만이고, 범죄율(Murder)이 12 미만인 주의 정보를 출력하시오.
subset(st,'Population'<2000 & 'Murder'<12)
# (17) 인구(Population)가 2,000 미만이고, 범죄율(Murder)이 12 미만인 주의 정보를 출력하시오.
subset(st,'Population'<2000 & 'Murder'<12)
# (17) 인구(Population)가 2,000 미만이고, 범죄율(Murder)이 12 미만인 주의 정보를 출력하시오.
subset(st,Population<2000 & Murder<12)
# (16) 전체 면적(Area)이 100,000 이상이고, 결빙일수(Frost)가 120 이상인 주의 정보를 출력하시오.
subset(st,'Area'>=100000 & 'Frost'>=120)
# (16) 전체 면적(Area)이 100,000 이상이고, 결빙일수(Frost)가 120 이상인 주의 정보를 출력하시오.
subset(st,Area>=100000 & Frost>=120)
# (15) 수입이 4,500 이상인 주는 몇 개인지 출력하시오.
nrow(subset(st,Incom>=4500))
'
# (15) 수입이 4,500 이상인 주는 몇 개인지 출력하시오.
nrow(subset(st,'Incom'>=4500))
# (15) 수입이 4,500 이상인 주는 몇 개인지 출력하시오.
nrow(subset(st,'Income'>=4500))
# (18) 문맹률(Illiteracy)이 2.0 이상인 주의 평균 수입은 얼마인지 출력하시오.
subset(st,Illiteracy>=2.0, select = 'Income'  )
# (19) 문맹률(Illiteracy)이 2.0 미만인 주와 2.0 이상인 주의 평균 수입의 차이를 출력하시오.
subset(st,2.0<Illiteracy>=2.0, select = 'Income')
# (20) 기대수명(Life Exp)이 가장 높은 주는 어디인지 출력하시오.
subset(st,Life Exp)
# (20) 기대수명(Life Exp)이 가장 높은 주는 어디인지 출력하시오.
st[,'Life.Exp']
# (20) 기대수명(Life Exp)이 가장 높은 주는 어디인지 출력하시오.
max(st[,'Life.Exp'])
subset(st,Life.Exp==73.6)
subset(st,Life.Exp==73.6 ,select = row.names(st))
row.names(subset(st,Life.Exp==73.6))
subset(st,Life.Exp == max(st[,'Life.Exp']))
row.names(subset(st,Life.Exp == max(st[,'Life.Exp']))
row.names(subset(st,Life.Exp == max(st[,'Life.Exp'])
row.names(subset(st,Life.Exp == max(st[,'Life.Exp'])))
# (21) Pennsylvania 주보다 수입(Income)이 높은 주들을 출력하시오.
#1단계 Pennsylvania주 수입구하기
subset(st,'Pennsylvania'>= income)
# (21) Pennsylvania 주보다 수입(Income)이 높은 주들을 출력하시오.
#1단계 Pennsylvania주 수입구하기
subset(st,'Pennsylvania',select = income)
# (21) Pennsylvania 주보다 수입(Income)이 높은 주들을 출력하시오.
#1단계 Pennsylvania주 수입구하기
subset(st,'Pennsylvania')[,'income']
# (21) Pennsylvania 주보다 수입(Income)이 높은 주들을 출력하시오.
#1단계 Pennsylvania주 수입구하기
subset(st,'Pennsylvania'[,'income'])
# (21) Pennsylvania 주보다 수입(Income)이 높은 주들을 출력하시오.
#1단계 Pennsylvania주 수입구하기
st['Pennsylvania','Income']
#2단계 높은 주들
subset(st,'Income'>4449)
#3단계 주들명 출력(행이름만 출력)
rownames(subset(st,'Income'>'4449'))
# 2.5 연산자
a <- matrix(1:20,4,5)
a
b <- matrix(21:40,4,5)
b
2*a
b-5
a+b
b/a
a*b
class(iris)
class(state.x77)
class(islands)
class(Ih)
class(lh)
class(Ih)
class(lh)
is.matrix(iris)
is.nan(iris)
is.data.frame(iris)
is.matrix(iris)
is.data.frame(iris)
#메트릭스를 데이터프레임set으로 변형하는것
st <- data.frame(state.x77)
st
class(st)
class(iris)
as.matrix(iris)
class(iris)
class(iris)
as.im <- as.matrix(iris)
class(iris)
class(as.im)
#알추출하기
class(iris)
class(state.x77)
iris[,'Species']
head(state.x77)
state.x77[,'Area']
iris[ , 5]
iris[-1]
iris[:-1]
iris[,-1]
iris[,8]
state.x77[,8]
state.x77[,-1]
8
state.x77[,8]
iris['Species']
iris['Area']
iris
state.x77['Area']
state.x77['Area']
iris[5]
state.x77[8]
irsi$Speceies
iris$Speceies
iris$Species
state.x77$Area
help("data.frame")
#3번문제
# (1) 위와 같은 내용을 가지는 데이터프레임 human을 생성하시오.
human <- data.frame('age'=20,'gender=M',height="180","student")
human
rm(human)
#3번문제
# (1) 위와 같은 내용을 가지는 데이터프레임 human을 생성하시오.
name <- c('Tom','Jane','Nick')
age <- c(20,23,26)
gender <- ('M','F','M')
gender <- c('M','F','M')
height <- c(180,160,175)
student <- c(TRUE,TRUE,FALSE)
human <- data.frame(name,age,gender,height,student)
human
# (2) human에 (“Mary”, 24, “F”, 155, TRUE)를 추가하시오(list함수 사용).
human <- list('Mary',24,'F',155,'TRUE')
human
human
human <- data.frame(name,age,gender,height,student)
human
# (3) 이 데이터셋 열들의 자료형을 보이시오.
class(human)
# (2) human에 (“Mary”, 24, “F”, 155, TRUE)를 추가하시오(list함수 사용).
human.new <- list(name='Mary',age=24,gender='F',hight=155,student='TRUE')
rbind(human,human.new)
human
human <- rbind(human,human.new)
human <- rbind(human,human.new)
rm(human)
#3번문제
# (1) 위와 같은 내용을 가지는 데이터프레임 human을 생성하시오.
name <- c('Tom','Jane','Nick')
age <- c(20,23,26)
gender <- c('M','F','M')
height <- c(180,160,175)
student <- c(TRUE,TRUE,FALSE)
human <- data.frame(name,age,gender,height,student)
huma
human
# (2) human에 (“Mary”, 24, “F”, 155, TRUE)를 추가하시오(list함수 사용).
human.new <- list(name='Mary',age=24,gender='F',hight=155,student='TRUE')
human <- rbind(human,human.new)
human <- rbind(human ,human.new)
human
# (2) human에 (“Mary”, 24, “F”, 155, TRUE)를 추가하시오(list함수 사용).
human.new <- list(name='Mary',age=24,gender='F',hight=155,student='TRUE')
human <- rbind(human ,human.new)
human.new
human <- rbind(human,human.new)
# (2) human에 (“Mary”, 24, “F”, 155, TRUE)를 추가하시오(list함수 사용).
human.new <- list(name='Mary',age=24,gender='F',height=155,student='TRUE')
human <- rbind(human,human.new)
human
# (3) 이 데이터셋 열들의 자료형을 보이시오.
str(human)
# (4) 평균 나이(age)와 평균 키(height)를 구하시오.
mean(age)
# (4) 평균 나이(age)와 평균 키(height)를 구하시오.
human$age
# (4) 평균 나이(age)와 평균 키(height)를 구하시오.
(human$age & human&height)
# (4) 평균 나이(age)와 평균 키(height)를 구하시오.
human$age & human&height
# (4) 평균 나이(age)와 평균 키(height)를 구하시오.
c(human$age , human&height)
# (4) 평균 나이(age)와 평균 키(height)를 구하시오.
c(human$age , human&height)
# (4) 평균 나이(age)와 평균 키(height)를 구하시오.
mean(human$age)
mean(human&height)
mean(human&height)
mean(human&height)
mean(human$height)
# (5) 4번째 열을 제외한 human의 열 이름을 출력하시오.
colnames(human)[4]
# (5) 4번째 열을 제외한 human의 열 이름을 출력하시오.
colnames(human)[-4]
colnames(human[-4])
colnames(human['height'])
colnames(human[-'height'])
# colnames(human[-'height']) 안된다
# (6) 성별(gender) 인원수를 보이시오.
table(gender)
# colnames(human[-'height']) 안된다
# (6) 성별(gender) 인원수를 보이시오.
table(human&gender)
# colnames(human[-'height']) 안된다
# (6) 성별(gender) 인원수를 보이시오.
table(human$gender)
#파일 데이터 읽기/쓰기
setwd("D:\AI\study\R_study")
air <- read.csv("airquality.csv,header=T")
#파일 데이터 읽기/쓰기
setwd("D:\AI\study\R_study")
heade(air)
#파일 데이터 읽기/쓰기
setwd("D:\AI\study\R_study")
#파일 데이터 읽기/쓰기
setwd("D:\AI\study\R_study")
air <- read.csv("airquality.csv",header=T)
heade(air)
#파일 데이터 읽기/쓰기
setwd("D:/AI/study/R_study")
air <- read.csv("airquality.csv",header=T)
heade(air)
air
class(air)
air2 <- read.csv("D:/AI/study/R_study")
air2 <- read.csv("D:/AI/study/R_study")
head(air2)
air2 <- read.csv2("D:/AI/study/R_study")
head(air2)
air <- read.csv("airquality.csv")
air
air
air <- read.csv("airquality.csv")
air
class(air)
air2 <- read.csv2("D:/AI/study/R_study")
head(air2)
rm(air)
rm(air2)
#파일 데이터 읽기/쓰기
setwd("D:/AI/study/R_study")
air <- read.csv("airquality.csv")
air
class(air)
air2 <- read.csv("D:/AI/study/R_study")
air2 <- read.csv('D:/AI/study/R_study')
air2 <- read.csv('"D:/AI/study/R_study/airquality.csv')
air2 <- read.csv('"D:/AI/study/R_study/airquality.csv')
air2 <- read.csv('D:/AI/study/R_study/airquality.csv')
head(air2)
air2['Ozone']
air3 <- read.csv(file.choose())
head(air3)
air3 <- read.csv(file.choose())
head(air3)
#저장하기
subset(iris , Species == 'setosa')
#저장하기
iris.setosa <- subset(iris , Species == 'setosa')
write.csv(iris.setosa,"irisfilename.csv",row.names = F)
write.csv(iris.setosa,"irisfilename.csv2")
write.csv(iris.setosa,"irisfilename2.csv")
write.csv(iris.setosa,"irisfilename2.csv") # 줄번호 있는것
write.csv(iris.setosa,"irisfilename.csv",row.names = F) #줄번호 없는것
write.csv(iris.setosa, file.choose())
